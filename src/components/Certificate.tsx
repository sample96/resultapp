import React from 'react';
import { Result } from '../types';

interface CertificateProps {
  result: Result;
  id?: string;
}

const Certificate: React.FC<CertificateProps> = ({ result, id }) => {
  return (
    <div
      id={id}
      className="w-full max-w-md bg-white border-4 border-blue-300 rounded-xl shadow-lg p-8 flex flex-col items-center"
      style={{ 
        minHeight: 400, 
        background: '#ffffff',
        fontFamily: 'Arial, sans-serif', // Ensure consistent font
        position: 'relative' // Help with positioning
      }}
    >
      <h1 className="text-2xl md:text-3xl font-extrabold text-blue-700 mb-2 tracking-wide text-center">
        Certificate of Achievement
      </h1>
      <p className="text-gray-700 text-center mb-6 text-lg">
        This is to certify that
      </p>
      <div className="w-full flex flex-col items-center mb-4">
        <span className="text-xl font-bold text-gray-900 mb-1">
          {result.eventName}
        </span>
        <span className="text-base text-blue-600 font-medium">
          Category: {result.category?.name}
        </span>
        <span className="text-sm text-gray-500">
          Date: {new Date(result.eventDate).toLocaleDateString()}
        </span>
      </div>
      
      {/* Individual Results */}
      {result.individual && (
        <div className="w-full mt-2">
          <h2 className="text-lg font-semibold text-blue-800 mb-2 text-center">Individual Results</h2>
          <ul className="mb-4">
            {['first', 'second', 'third'].map((place, idx) => {
              const pos = result.individual && result.individual[place as keyof typeof result.individual];
              return pos && pos.name ? (
                <li key={place} className="flex items-center gap-2 justify-center text-base mb-1">
                  <span className={["text-blue-600", "text-green-600", "text-red-600"][idx]}>
                    {["ðŸ¥‡", "ðŸ¥ˆ", "ðŸ¥‰"][idx]}
                  </span>
                  <span className="font-medium">{pos.name}</span>
                  {pos.details && <span className="text-gray-400">({pos.details})</span>}
                </li>
              ) : null;
            })}
          </ul>
        </div>
      )}
      
      {/* Group Results */}
      {result.group && (
        <div className="w-full">
          <h2 className="text-lg font-semibold text-blue-800 mb-2 text-center">Group Results</h2>
          <ul>
            {['first', 'second', 'third'].map((place, idx) => {
              const pos = result.group && result.group[place as keyof typeof result.group];
              return pos && pos.name ? (
                <li key={place} className="flex items-center gap-2 justify-center text-base mb-1">
                  <span className={["text-blue-600", "text-green-600", "text-red-600"][idx]}>
                    {["ðŸ¥‡", "ðŸ¥ˆ", "ðŸ¥‰"][idx]}
                  </span>
                  <span className="font-medium">{pos.name}</span>
                  {pos.details && <span className="text-gray-400">({pos.details})</span>}
                </li>
              ) : null;
            })}
          </ul>
        </div>
      )}
      
      <div className="mt-8 w-full flex justify-between items-center">
        <span className="text-xs text-gray-400">Generated by ResultApp</span>
        <span className="text-xs text-gray-400">{new Date(result.createdAt).toLocaleDateString()}</span>
      </div>
    </div>
  );
};

export default Certificate;